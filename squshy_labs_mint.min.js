class Web3Config{constructor(){this.contract_chain="mainnet",this.provider_url="https://eth-mainnet.alchemyapi.io/v2/jqwbogtF9IlO-3kW_3n9S_QyjeXNDPUx",this.metamask_deeplink=!1,this.has_allow_list=!1,this.btn_mint_id="squshy_mint_btn",this.fld_token_count_id="fld_token_count_id",this.fld_token_special_1_id="button_amount_options_toggle_1",this.fld_token_special_2_id="button_amount_options_toggle_2",this.alert_success_id="modal_success_text",this.alert_error_id="modal_error_text",this.alert_info_id="modal_info_text",this.alert_success_parent_id="button_modal_success",this.alert_error_parent_id="button_modal_error",this.alert_info_parent_id="button_modal_info",this.mint_sig_v=null,this.mint_sig_r=null,this.mint_sig_s=null,this.mint_allowed_amount=15,this.mint_amount=0,this.mint_price="0.0099",this.mint_price_original="0.0099",this.contract_address=null,this.contract_abi=[{inputs:[],name:"ApprovalCallerNotOwnerNorApproved",type:"error"},{inputs:[],name:"ApprovalQueryForNonexistentToken",type:"error"},{inputs:[],name:"ApprovalToCurrentOwner",type:"error"},{inputs:[],name:"ApproveToCaller",type:"error"},{inputs:[],name:"BalanceQueryForZeroAddress",type:"error"},{inputs:[],name:"MintToZeroAddress",type:"error"},{inputs:[],name:"MintZeroQuantity",type:"error"},{inputs:[],name:"OwnerQueryForNonexistentToken",type:"error"},{inputs:[],name:"TransferCallerNotOwnerNorApproved",type:"error"},{inputs:[],name:"TransferFromIncorrectOwner",type:"error"},{inputs:[],name:"TransferToNonERC721ReceiverImplementer",type:"error"},{inputs:[],name:"TransferToZeroAddress",type:"error"},{inputs:[],name:"URIQueryForNonexistentToken",type:"error"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"approved",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Approval",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"owner",type:"address"},{indexed:!0,internalType:"address",name:"operator",type:"address"},{indexed:!1,internalType:"bool",name:"approved",type:"bool"}],name:"ApprovalForAll",type:"event"},{anonymous:!1,inputs:[{indexed:!1,internalType:"uint8",name:"version",type:"uint8"}],name:"Initialized",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"previousOwner",type:"address"},{indexed:!0,internalType:"address",name:"newOwner",type:"address"}],name:"OwnershipTransferred",type:"event"},{anonymous:!1,inputs:[{indexed:!0,internalType:"address",name:"from",type:"address"},{indexed:!0,internalType:"address",name:"to",type:"address"},{indexed:!0,internalType:"uint256",name:"tokenId",type:"uint256"}],name:"Transfer",type:"event"},{inputs:[{components:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"uint256",name:"maxSupply",type:"uint256"},{internalType:"address",name:"signer",type:"address"},{internalType:"string",name:"baseURI",type:"string"},{internalType:"uint256",name:"publicMintLimit",type:"uint256"},{internalType:"uint256",name:"publicMintPrice",type:"uint256"},{internalType:"bool",name:"publicMintEnabled",type:"bool"},{internalType:"bool",name:"approveListMintingEnabled",type:"bool"},{internalType:"address",name:"squshyLabsAddress",type:"address"},{internalType:"uint256",name:"commission",type:"uint256"},{internalType:"address",name:"implementationAddress",type:"address"},{internalType:"address",name:"withdrawalAddress",type:"address"}],internalType:"struct Config",name:"_config",type:"tuple"}],name:"_initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint8",name:"v",type:"uint8"},{internalType:"bytes32",name:"r",type:"bytes32"},{internalType:"bytes32",name:"s",type:"bytes32"},{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"uint256",name:"allowedAmount",type:"uint256"},{internalType:"address",name:"mintAddress",type:"address"}],name:"allowListMint",outputs:[],stateMutability:"payable",type:"function"},{inputs:[{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"approve",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"approveListMintingEnabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"}],name:"balanceOf",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"baseURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"getApproved",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{components:[{internalType:"string",name:"name",type:"string"},{internalType:"string",name:"symbol",type:"string"},{internalType:"uint256",name:"maxSupply",type:"uint256"},{internalType:"address",name:"signer",type:"address"},{internalType:"string",name:"baseURI",type:"string"},{internalType:"uint256",name:"publicMintLimit",type:"uint256"},{internalType:"uint256",name:"publicMintPrice",type:"uint256"},{internalType:"bool",name:"publicMintEnabled",type:"bool"},{internalType:"bool",name:"approveListMintingEnabled",type:"bool"},{internalType:"address",name:"squshyLabsAddress",type:"address"},{internalType:"uint256",name:"commission",type:"uint256"},{internalType:"address",name:"implementationAddress",type:"address"},{internalType:"address",name:"withdrawalAddress",type:"address"}],internalType:"struct Config",name:"_config",type:"tuple"}],name:"initialize",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"owner",type:"address"},{internalType:"address",name:"operator",type:"address"}],name:"isApprovedForAll",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"maxSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"amount",type:"uint256"},{internalType:"address",name:"mintAddress",type:"address"}],name:"mint",outputs:[],stateMutability:"payable",type:"function"},{inputs:[],name:"name",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"owner",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"ownerOf",outputs:[{internalType:"address",name:"",type:"address"}],stateMutability:"view",type:"function"},{inputs:[],name:"publicMintEnabled",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"publicMintLimit",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"publicMintPrice",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[],name:"renounceOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"},{internalType:"bytes",name:"_data",type:"bytes"}],name:"safeTransferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"operator",type:"address"},{internalType:"bool",name:"approved",type:"bool"}],name:"setApprovalForAll",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"uint256",name:"_publicMintLimit",type:"uint256"},{internalType:"uint256",name:"_publicMintPrice",type:"uint256"},{internalType:"bool",name:"_publicMintEnabled",type:"bool"},{internalType:"bool",name:"_approveListMintingEnabled",type:"bool"}],name:"setMintConfig",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"string",name:"_newBaseURI",type:"string"}],name:"setURI",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"bytes4",name:"interfaceId",type:"bytes4"}],name:"supportsInterface",outputs:[{internalType:"bool",name:"",type:"bool"}],stateMutability:"view",type:"function"},{inputs:[],name:"symbol",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"tokenURI",outputs:[{internalType:"string",name:"",type:"string"}],stateMutability:"view",type:"function"},{inputs:[],name:"totalSupply",outputs:[{internalType:"uint256",name:"",type:"uint256"}],stateMutability:"view",type:"function"},{inputs:[{internalType:"address",name:"from",type:"address"},{internalType:"address",name:"to",type:"address"},{internalType:"uint256",name:"tokenId",type:"uint256"}],name:"transferFrom",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"newOwner",type:"address"}],name:"transferOwnership",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[{internalType:"address",name:"_signer",type:"address"}],name:"updateSigner",outputs:[],stateMutability:"nonpayable",type:"function"},{inputs:[],name:"withdraw",outputs:[],stateMutability:"payable",type:"function"}]}}const WEB3_CONFIG=new Web3Config;function setupMint(){let a=document.getElementById(WEB3_CONFIG.btn_mint_id);a&&(a.onclick=mint)}function display_error(a){hide_info(),console.log("ERROR: "+a);let b=document.getElementById(WEB3_CONFIG.alert_error_parent_id),c=document.getElementById(WEB3_CONFIG.alert_error_id);b&&(b.classList.remove("hidden"),c.innerHTML=a.toString())}function display_success(a){hide_info(),console.log("INFO: "+a);let b=document.getElementById(WEB3_CONFIG.alert_success_parent_id),c=document.getElementById(WEB3_CONFIG.alert_success_id);b&&(b.classList.remove("hidden"),c.innerHTML=a.toString())}function display_info(a){console.log("INFO: "+a);let b=document.getElementById(WEB3_CONFIG.alert_info_parent_id),c=document.getElementById(WEB3_CONFIG.alert_info_id);b&&(b.classList.remove("hidden"),c.innerHTML=a.toString())}function hide_info(){let a=document.getElementById(WEB3_CONFIG.alert_info_parent_id);a&&a.classList.add("hidden")}function getNumTokens(){let a=document.getElementById(WEB3_CONFIG.fld_token_count_id),b=document.getElementById(WEB3_CONFIG.fld_token_special_1_id),c=document.getElementById(WEB3_CONFIG.fld_token_special_2_id);return b.classList.contains("border-blue-500")?parseInt(a.value.split(" (")[0]):c.classList.contains("border-blue-500")?15:1}function raiseError(a){return console.log("ERROR: "+a),display_error(a),!1}function isNormalInteger(a){if("string"!=typeof a&&"number"!=typeof a)return!1;let b=Math.floor(Number(a));return b!==1/0&&String(b)===a&&b>=0}function isNormalHexInteger(a){return"string"==typeof a&&a.startsWith("0x")&&isNormalInteger(a.substr(2))}function decimalToHex(a){return"string"==typeof a&&(a=parseInt(a)),`0x${a.toString(16)}`}function isUserRejectedRequestError(a){return 4001===a.code}function isUnrecognizedChainError(a){return -32603===a.code&&a.message.toLowerCase().includes("unrecognized chain id")}const chainToChainId={mainnet:"0x1",ropsten:"0x3",rinkeby:"0x4",goerli:"0x5",kovan:"0x2a",binance:"0x38",polygon:"0x89",mumbai:"0x13881",hardhat:"0x539"};class ConnectionManager{constructor(a){this.contract_chain=a.contract_chain,this.provider_url=a.provider_url,this.metamask_deeplink=a.metamask_deeplink,this.is_mobile=detectMob()}async _getWeb3Modal(){let a=window.Web3Modal.default,b=window.WalletConnectProvider.default;return window.ethereum?new a({cacheProvider:!1,providerOptions:{walletconnect:{package:b,options:{infuraId:"867bbd4c23694a5f8714f7d4f87492a8"}}},disableInjectedProvider:!1}):!0===this.is_mobile&& !1!==this.metamask_deeplink?(window.location.href=this.metamask_deeplink,!1):display_error("Ethereum wallet not found. Please install Metamask or use an Ethereum-compatible mobile browser.")}async _getCurrentChainId(a){return await a.request({method:"eth_chainId"})}async _useChainId(b,a,d){let c=await this._getCurrentChainId(b);if(this.chain_id=a,c!==a)return b.request({method:"wallet_switchEthereumChain",params:[{chainId:a}]}).catch(b=>{if(isUserRejectedRequestError(b))return d?display_error(`Please reconfigure your Ethereum wallet to use the ${d} network.`):display_error(`Please reconfigure your Ethereum wallet to use the network with chainId ${a}.`);if(isUnrecognizedChainError(b))return d?display_error(`Please add the ${d} network RPC information to your Ethereum wallet.`):display_error(`Please add the network with chainId ${a} RPC information to your Ethereum wallet.`);throw b})}_useChain(b,a){return chainToChainId.hasOwnProperty(a)?this._useChainId(b,chainToChainId[a],a):display_error(`PROGRAM ERROR: Unsupported chain ${a}.`)}_getAccount(a){return a.send("eth_requestAccounts").then(a=>a.result[0]).catch(a=>{if(isUserRejectedRequestError(a))return display_error("Please allow the site to connect to your Ethereum wallet.");throw a})}_getWeb3(){return new Web3(this.provider_url.toString().includes("localhost")?new Web3.providers.HttpProvider(this.provider_url):this.provider_url)}async connect(){if(!this.contract_chain)return display_error("PROGRAM_ERROR: Please provide a chain to connect to.");display_info("Connecting to your Ethereum wallet..."),hideModal();let b=await this._getWeb3Modal();if(!1===b)return display_error("Cannot find web3modal"),!1;let a=await b.connect();if(showModal(),!1===a)return display_error("Cannot detect an ethereum provider"),!1;isNormalInteger(this.contract_chain)?await this._useChainId(a,decimalToHex(this.contract_chain)):isNormalHexInteger(this.contract_chain)?await this._useChainId(a,this.contract_chain):await this._useChain(a,this.contract_chain);let c=await this._getAccount(a),d=await this._getWeb3();return this.provider=a,this.account=c,this.web3=d,display_success("Connected to ".concat(this.account)),c}}function detectMob(){return[/Android/i,/webOS/i,/iPhone/i,/iPad/i,/iPod/i,/BlackBerry/i,/Windows Phone/i].some(a=>navigator.userAgent.match(a))}class MintingManager{constructor(b,c,a){this.connectionManager=b,this.address=c,this.v=a.mint_sig_v,this.r=a.mint_sig_r,this.s=a.mint_sig_s,this.amount=a.mint_amount,this.allowed_amount=a.mint_allowed_amount,this.mint_price=a.mint_price,this.has_allow_list=a.has_allow_list,this.contract_abi=a.contract_abi,this.contract_address=a.contract_address}async mint(){let b=new this.connectionManager.web3.eth.Contract(this.contract_abi,this.contract_address),a;!0===this.has_allow_list?a={from:this.address,to:this.contract_address,value:this.mint_price,data:b.methods.allowListMint(this.v,this.r,this.s,this.amount,this.allowed_amount,this.address).encodeABI()}:(console.log("address",this.address),console.log("mint_price",this.mint_price),console.log("contract_address",this.contract_address),console.log("amount",this.amount),a={from:this.address,to:this.contract_address,value:this.mint_price,data:b.methods.mint(this.amount,this.address).encodeABI()});let c=await this.connectionManager.provider.request({method:"eth_sendTransaction",params:[a]});display_info('Token minting, <a href="https://etherscan.io/tx/'.concat(c,'">view your transaction here</a>'))}}async function mint(){let b=new ConnectionManager(WEB3_CONFIG),c=await b.connect();if(!1===c)return!1;let d=getNumTokens();WEB3_CONFIG.mint_amount=d;let e=new Web3(b.provider);if(WEB3_CONFIG.mint_price=e.utils.toHex(e.utils.toWei((parseFloat(WEB3_CONFIG.mint_price_original)*d).toString(),"ether")),!0===WEB3_CONFIG.has_allow_list){let f=await fetch(BACKEND_ENDPOINT.concat("api/pre-mint/")+new URLSearchParams({address:c,num_tokens:d}),{method:"GET"}),a=await f.json();if("failure"===a.result)return display_error(a.message),!1;if(!0!==a.approved)return display_error("Address is not approved for minting"),!1;WEB3_CONFIG.mint_sig_v=a.v,WEB3_CONFIG.mint_sig_r=a.r,WEB3_CONFIG.mint_sig_s=a.s,WEB3_CONFIG.mint_amount=a.amount,WEB3_CONFIG.mint_allowed_amount=a.allowed_amount,WEB3_CONFIG.mint_price=a.mint_price}let g=new MintingManager(b,c,WEB3_CONFIG);display_success("Address is approved for minting"),await g.mint()}function setupMintModal(){let a=document.getElementById("button_modal_close_btn"),h=document.getElementById("button_modal"),b=document.getElementById("squshy_labs_mint_modal_btn"),c=document.getElementById("button_modal_error_close_btn"),i=document.getElementById("button_modal_error"),d=document.getElementById("button_modal_success_close_btn"),j=document.getElementById("button_modal_success");document.getElementById("button_modal_info");let e=document.getElementById("button_amount_options_toggle_1"),f=document.getElementById("button_amount_options_toggle_2"),g=document.getElementById("etherscan_link");"rinkeby"===WEB3_CONFIG.contract_chain?g.href="https://rinkeby.etherscan.io/address/".concat(WEB3_CONFIG.contract_address):g.href="https://etherscan.io/address/".concat(WEB3_CONFIG.contract_address),a&&a.addEventListener("click",()=>{h.classList.toggle("hidden")}),b&&b.addEventListener("click",()=>{h.classList.toggle("hidden")}),c&&c.addEventListener("click",()=>{i.classList.toggle("hidden")}),d&&d.addEventListener("click",()=>{j.classList.toggle("hidden")}),e&&e.addEventListener("click",()=>{e.classList.replace("border-gray-300","border-blue-500"),f.classList.replace("border-blue-500","border-gray-300")}),f&&f.addEventListener("click",()=>{f.classList.replace("border-gray-300","border-blue-500"),e.classList.replace("border-blue-500","border-gray-300")})}function showModal(){let a=document.getElementById("button_modal");a&&a.classList.remove("hidden")}function hideModal(){let a=document.getElementById("button_modal");a&&a.classList.add("hidden")}document.getElementById("squshy_labs_mint_modal")&&fetch("https://cdn.jsdelivr.net/gh/SqushyLabs/cdn-squshy-mint@dac720d6b4389719485b4abbf6560460e3c07da3/squshy_mint_modal.html").then(a=>a.text()).then(a=>{document.getElementById("squshy_labs_mint_modal").innerHTML=a,setupMintModal(),setupMint()})